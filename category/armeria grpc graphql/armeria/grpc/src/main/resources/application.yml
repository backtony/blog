server:
  shutdown: graceful

spring:
  application:
    name: grpc

  kafka:
    bootstrap-servers: http://localhost:19092

  # https://github.com/asyncer-io/r2dbc-mysql/wiki/getting-started
  r2dbc:
    url: r2dbc:mysql://localhost:3306/armeria
    username: root
    password: root
    properties:
      serverZoneId: Asia/Seoul
      # Duration.parse 를 사용하므로 3s 형식으로 넣으면 예외가 발생
      # MySqlConnectionFactoryProvider#setup 메서드 참고
      connectTimeout: PT3S
    # https://github.com/r2dbc/r2dbc-pool
    # https://javadoc.io/doc/io.r2dbc/r2dbc-pool/0.9.0.M1/io/r2dbc/pool/ConnectionPoolConfiguration.Builder.html
    pool:
      initial-size: 10
      max-size: 10
      max-life-time: 30m
      max-create-connection-time: 3s

# https://github.com/asyncer-io/r2dbc-mysql/wiki/logging-statements
logging:
  level:
    io.asyncer.r2dbc.mysql: INFO
    io.asyncer.r2dbc.mysql.QUERY: DEBUG
#    com.linecorp.armeria.server.logging.LoggingService: DEBUG

management:
  tracing:
    enabled: true
    sampling:
      # 참고 : https://opentelemetry.io/docs/specs/otel/trace/tracestate-probability-sampling/
      # 모든 로그를 샘플링
      probability: 1.0
    # https://github.com/openzipkin/b3-propagation#multiple-headers
    # single은 단일, multi는 여러개 헤더로
    propagation:
      type: B3

zipkin:
  endpoint: http://localhost:19092
  messageTimeout: 1
